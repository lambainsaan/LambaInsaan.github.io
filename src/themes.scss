@import './utils';
$accent: #ffd740;
$blackPalette: (
  50: #f5f5f5,
  100: #e9e9e9,
  200: #d9d9d9,
  300: #c4c4c4,
  400: #9d9d9d,
  500: #7b7b7b,
  600: #555555,
  700: #434343,
  800: #262626,
  900: #000000
);

$whitePalette: (
  50: #ffffff,
  100: #fafafa,
  200: #f5f5f5,
  300: #f0f0f0,
  400: #f0f0f0,
  500: #c2c2c2,
  600: #979797,
  700: #818181,
  800: #606060,
  900: #3c3c3c
);

$accentPalette: (
  50: #fff8df,
  100: #ffecaf,
  200: #ffe07a,
  300: #ffd640,
  400: #ffcb00,
  500: #ffc100,
  600: #ffb300,
  700: #ff9f00,
  800: #ff8e00,
  900: #ff6c00
);

$theme: (
  dark: (
    'primary': black,
    'accent': map-get($accentPalette, 300),
    'secondary': rgba(255, 255, 255, 1),
  ),
  light: (
    'accent': map-get($accentPalette, 300),
    'primary': white,
    'secondary': black,
  )
);

$themes: (
  darkTheme: (
    'primary': map-deep-get($theme, 'dark', 'primary'),
    'accent': map-deep-get($theme, 'dark', 'accent'),
    'secondary': map-deep-get($theme, 'dark', 'secondary'),
    'box-shadow': unset,
    'bg-color-top-nav-bar': map-deep-get($theme, 'dark', 'secondary'),
    'shadow': unset,
    'card-border': map-deep-get($theme, 'dark', 'accent'),
    'card-background': map-deep-get($theme, 'dark', 'primary'),
    'text-color': map-deep-get($theme, 'dark', 'secondary')
  ),
  lightTheme: (
    'primary': map-deep-get($theme, 'light', 'primary'),
    'accent': map-deep-get($theme, 'light', 'accent'),
    'secondary': map-deep-get($theme, 'light', 'secondary'),
    'shadow': 0px 4px 4px rgba(0, 0, 0, 0.2),
    'bg-color-top-nav-bar': transparent,
    'card-border': map-deep-get($theme, 'light', 'secondary'),
    'card-background': transparent,
    'text-color': map-deep-get($theme, 'dark', 'secondary')
  )
);


// From Sass 2.0 on, it is no longer allowed to declare globals on the fly.
$theme-map: null;

@mixin theme() {
  @each $theme, $map in $themes {
    // $theme: darkTheme, lightTheme
    // $map: ('text-color': ..., 'bg-color': ...)

    // make the $map globally accessible, so that theme-get() can access it
    $theme-map: $map !global;

    // make a class for each theme using interpolation -> #{}
    // use & for making the theme class ancestor of the class
    // from which you use @include theme() {...}
    &.#{$theme} {
      @content;    // the content inside @include theme() {...}
    }
  }
  // no use of the variable $theme-map now
  $theme-map: null !global;
}


@mixin themeApplyOnParent() {
  @each $theme, $map in $themes {
    // $theme: darkTheme, lightTheme
    // $map: ('text-color': ..., 'bg-color': ...)

    // make the $map globally accessible, so that theme-get() can access it
    $theme-map: $map !global;

    // make a class for each theme using interpolation -> #{}
    // use & for making the theme class ancestor of the class
    // from which you use @include theme() {...}
    .#{$theme} & {
      @content;    // the content inside @include theme() {...}
    }
  }
  // no use of the variable $theme-map now
  $theme-map: null !global;
}

@function theme-get($key) {
  @return map-get($theme-map, $key);
}
